<?php

/**
 * @file
 * Install, update and uninstall functions for the forward module.
 */

use Drupal\Core\Entity\Entity\EntityViewMode;

/**
 * Implements hook_install().
 */
function forward_install() {
  // Set default values for config which require dynamic values.
  \Drupal::configFactory()->getEditable('forward.settings')
    ->set('forward_email_from_address', \Drupal::config('system.site')->get('mail'))
    ->save();

  // Add the Forward mail plugin that sends HTML email for the 'send_entity' key only.
  // All other emails from Forward or any other module will use the standard plugin.
  // If a different mail plug becomes the default, that plugin will be used instead.
  $config = \Drupal::configFactory()->getEditable('system.mail');
  $interface = $config->get('interface');
  $interface['forward_send_entity'] = 'forward_mail';
  \Drupal::configFactory()->getEditable('system.mail')
    ->set('interface', $interface)
    ->save();

  // Add a custom view mode.
  EntityViewMode::create([
    'id' => 'node.forward',
    'label' => 'Forward',
    'status' => 0,
    'targetEntityType' => 'node',
  ])->save();
}

/**
 * Implements hook_uninstall().
 */
function forward_uninstall() {
  // Clear default values for config which require dynamic values.
  \Drupal::configFactory()->getEditable('forward.settings')
    ->clear('forward_email_from_address')
    ->save();

  // Remove the Forward mail plugin.
  $config = \Drupal::configFactory()->getEditable('system.mail');
  $mail_plugins = $config->get('interface');
  unset($mail_plugins['forward_send_entity']);
  $config->set('interface', $mail_plugins)->save();

  // Remove the custom view mode.
  $view_mode = EntityViewMode::load('node.forward');
  if ($view_mode) {
    $view_mode->delete();
  }

  // Remove the Forward logs view.
  $view = \Drupal::service('entity_type.manager')
    ->getStorage('view')
    ->load('forward_logs');
  if ($view) {
    $view->delete();
  }

  // Remove the Forward statistics view.
  $view = \Drupal::service('entity_type.manager')
    ->getStorage('view')
    ->load('forward_statistics');
  if ($view) {
    $view->delete();
  }
}

/**
 * Implements hook_schema().
 */
function forward_schema() {
  $schema['forward_log'] = [
    'fields' => [
      'logid' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique log ID.',
      ],
      'type' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'default' => '',
        'length' => 128,
      ],
      'id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'path' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'default' => '<front>',
        'length' => 255,
      ],
      'action' => ['type' => 'varchar', 'not null' => TRUE, 'length' => 8],
      'timestamp' => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'uid' => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'hostname' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Hostname of the user who triggered the event.',
      ],
    ],
    'primary key' => ['logid'],
    'indexes' => [
      'forward_entity' => ['type', 'id'],
      'forward_uid' => ['uid'],
    ],
  ];
  $schema['forward_statistics'] = [
    'fields' => [
      'type' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'default' => '',
        'length' => 128,
      ],
      'bundle' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'default' => '',
        'length' => 128,
      ],
      'id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'last_forward_timestamp' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'forward_count' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'clickthrough_count' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['type', 'bundle', 'id'],
    'indexes' => [
      'forward_timestamp' => ['last_forward_timestamp'],
    ],
  ];
  return $schema;
}

/**
 * Sets default value for new variables.
 */
function forward_update_8001() {
  $config_factory = \Drupal::configFactory();
  $config_factory->getEditable('forward.settings')
    ->set('forward_max_recipients', 1)
    ->set('forward_max_recipients_error', "You can't send email to more than @number recipient(s) at a time.")
    ->save();
}
