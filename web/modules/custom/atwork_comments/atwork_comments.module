<?php

use \Drupal\core\Form\FormBuilder;
use \Drupal\user\Entity\User;

/**
 * @file
 * Primary module hooks for atwork_comments module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_template_preprocess_default_variables_alter() for comment--comment.html.twig.
 *
 * @param array $variables
 */
function atworknext_preprocess_comment__comment(&$variables){
	/*At some point we will add in ministry information to author byline as well*/
	
	// Determine if comment is a third order or higher comment and should be indented twice
	if(is_object($variables['parent_comment'])) {
		$variables['indent_twice'] = $variables['parent_comment']->hasParentComment();
		$variables['is_reply'] = TRUE; 
	}
	
	//Get Timestamp and make our own variable
	//$variables['createdTime'] = $variables['comment']->getCreatedTime();
	$variables['atworkCreatedTime'] =  $variables['comment']->getCreatedTime();
	//Fix comment permalink text
	$variables['comment_link'] = str_replace('Permalink','Link', $variables['permalink']);
	
	
	// Remove unlike action (if user has liked the comment)...upon further testing, this may not work
	if($variables['elements']['likeit']['#action'] = 'unlike') {
		$variables['elements']['likeit']['#action'] = NULL;
	}
	
	// Check if user has liked this comment.
	$user = User::load(\Drupal::currentUser()->id());
	$comment_entity_id = $variables['elements']['#entity']->id();
	$liked = '';
	$likes_object = '';
	
	try {
		// Select like history from db
		$connection = \Drupal::database();
		$query = $connection->query("Select * from likeit where user_id = " . $user->id() . " and target_entity_id = " . $comment_entity_id);
		$liked = $query->fetch();
		
		$query = $connection->query("Select count(*) as num_likes from likeit where target_entity_id = " . $comment_entity_id);
		$likes_object = $query->fetch();
		
	}
	catch(Exception $e) {
		\Drupal::logger('type')->error($e->getMessage());
	}
	
	$num_likes = $likes_object->num_likes;
	
	// Build like message
	if($liked) {
	  if($num_likes == 1) {
	  	$variables['like_msg'] = 'You like this';
	  }
	  else if($num_likes == 2) {
	  	$variables['like_msg'] = 'You and 1 person like this';
	  }
	  else if($num_likes > 2) {
	  	$variables['like_msg'] = 'You and ' . $num_likes . ' people like this';
	  }
	} 
	else if (!$liked) {
		if($num_likes == 1) {
			$variables['like_msg'] =  '1 person likes this';
		}
		else if($num_likes > 1) {
			$variables['like_msg'] =  $num_likes. ' people like this';
		}
		else {
			$variables['like_msg'] =  '';
		}
	}
}


function atworknext_preprocess_field__comment(&$variables){
	// Get number of comments on page load
	$num_comments = 0;
	foreach(array_keys($variables['comments']) as $key){
		if(is_int($key)) $num_comments++;
	}
	$variables['num_comments'] = $num_comments;
}

function atworknext_preprocess_block__views_block__comment_block_1(&$variables) {
	// Add any variables to the comment block template here.

	// Add comment form to our block
	//$comment_form = \Drupal::entityFormBuilder()->getForm('Drupal\comment\CommentForm');
}

/**
 * Implements hook_form_FORM_ID_alter
 *
 * @param [object] $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param [object] $form_id
 * @return void
 */
function atwork_comments_form_comment_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
	//dpm($form_state);
	// *only admins should be able to access some fields
	$user = \Drupal::currentUser();
	$uid = \Drupal::currentUser()->id();
	$roles = $user->getRoles();
	// TODO: We need to add editor roles to this
	if(!in_array('administrator', $roles)){
		$form['field_edited_comment']['#access'] = FALSE;
		$form['field_remove_comment']['#access'] = FALSE;
	} 

	// TODO: We need to save a comment as Employee News if a specific checkbox is marked.

}
