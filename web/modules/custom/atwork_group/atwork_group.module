<?php

use Drupal\group\Entity\GroupContent;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\Entity\BaseFieldOverride;
use Drupal\redirect\Entity\Redirect;
use Drupal\group\Entity\Group;


/**
 * Implements hook_preprocess_HOOK().
 *
 */
function atworknext_preprocess_node__group_post(&$variables) {
	// Get the group info for the group content (post)
	// NOTE: This will only work if the cardinality in the Group node (Group Post) plugin is set to 1.
	if ($variables['node']->getType() == 'group_post' && $variables['view_mode'] == 'full') {
		foreach (GroupContent::loadByEntity($variables['node']) as $group_content) {
			if($variables['node']->id() == $group_content->getEntity()->id()) $variables['group_label'] = $group_content->getGroup()->label();
		}
	}

	// Load Related Content Block
	$block = \Drupal\block\Entity\Block::load('views_block__related_content_block_3');
	$block_content = \Drupal::entityTypeManager()
	->getViewBuilder('block')
	->view($block);
	$variables['related_content'] = $block_content;
  $variables['node_title'] = $variables['elements']['#node']->getTitle();
}

/**
 * Implements hook_preprocess_HOOK().
 *
 */
function atworknext_preprocess_group(&$variables) {
	// Is the user a member of this group? Admin?
	if($variables['group']->getMember(\Drupal::currentUser()->getAccount())) {
		$variables['member'] = TRUE;
		// Check for group admin role
		if(array_key_exists('atwork_groups-admin', $variables['group']->getMember(\Drupal::currentUser()->getAccount())->getRoles())) {
		  $variables['admin'] = TRUE;
		}
	} else {
		$variables['member'] = FALSE;
		$variables['admin'] = FALSE;
	}

	// Get group info
	$group = Group::load($variables['group']->id());
	$group_id = $group->id();
	$group_label = $group->get('label')->getValue()[0]['value'];

	// Add links to group content forms and view pages
	$linkObject = Link ::createFromRoute(t('Create Post'), 'entity.group_content.create_form', ["group" => $group_id,'plugin_id' => 'group_node:group_post']);
	$variables['post_link'] = $linkObject->toRenderable();

	$linkObject = Link ::createFromRoute(t('Create Photo Gallery'), 'entity.group_content.create_form', ["group" => $group_id,'plugin_id' => 'group_node:photos']);
	$variables['photos_link'] = $linkObject->toRenderable();

	$linkObject = Link ::createFromRoute(t('Join Group'), 'entity.group.join', ["group" => $group_id]);
	$variables['join_link'] = $linkObject->toRenderable();

	$linkObject = Link ::createFromRoute(t('Leave Group'), 'entity.group.leave', ["group" => $group_id]);
	$variables['leave_link'] = $linkObject->toRenderable();

	$linkObject = Link ::createFromRoute(t('View Photo Galleries'), 'view.related_content.page_2', ["arg_0" => strtolower(str_replace(' ', '-', $group_label))]);
	$variables['photo_galleries'] = $linkObject->toRenderable();

	$linkObject = Link ::createFromRoute(t('View Posts'), 'view.related_content.page_1', ["arg_0" => strtolower(str_replace(' ', '-', $group_label))]);
	$variables['group_posts'] = $linkObject->toRenderable();

	// Note: Group label has been used as menu id
	$linkObject = Link ::createFromRoute(t('Administer Group Menu'), 'entity.menu.edit_form', ["menu" => strtolower(str_replace(' ', '-', $group_label))]);
	$variables['administer_sidebar'] = $linkObject->toRenderable();

	// Load Related Content Block
	$block = \Drupal\block\Entity\Block::load('views_block__related_content_block_3');
	$block_content = \Drupal::entityTypeManager()
	->getViewBuilder('block')
	->view($block);
 	$variables['related_content'] = $block_content;

	// Load Group Spotlight
	$block = \Drupal\block\Entity\Block::load('views_block__related_content_block_4');
	$block_content = \Drupal::entityTypeManager()
	->getViewBuilder('block')
	->view($block);
	$variables['group_spotlight'] = $block_content;
}

/**
 * Implements hook_preprocess_HOOK().
 *
 */
function atworknext_preprocess_container__atwork(&$variables) {
	global $base_url;
	$current_path = \Drupal::service('path.current')->getPath();
	// Check if this is a group join page
	if(preg_match("$\/(group)\/[0-9]+\/(join)$", $current_path, $test)){
		if(isset($variables['element']) && $variables['element']['#id'] = "edit-path-wrapper" && $variables['element']['#type'] != 'actions') {
			// This is a input field that the group module is adding. This was the only way i could figure out to get rid of it.
			$variables['children'] = NULL;
			$variables['join_group'] = TRUE;
			$variables['group_link'] = $base_url . substr($current_path , 0,-5);
		}
	}
	if(preg_match("$\/(group)\/[0-9]+\/(leave)$", $current_path, $test)){
		$variables['leave_group'] = TRUE;
		$variables['group_link'] = $base_url . substr($current_path , 0,-6);
	}
}

/**
 * Implements hook_form_alter().
 *
 */
function atwork_group_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form_id == "group_content_atwork_groups-group_membership_group-join_form") {
	  $form['actions']['submit']['#submit'][] = 'atwork_group_join_group_submit';
	}

	if($form_id == "group_content_group_content_type_d7657d2029e9e_add_form" || $form_id == "group_content_atwork_groups-group_node-photos_add_form") {
	  $form['actions']['submit']['#submit'][] = 'atwork_group_group_content_submit';
	}

	if($form_id == "group_content_atwork_groups-group_membership_add_form") {
	  $form['path']['#access'] = FALSE;
	  $form['actions']['submit']['#prefix'] = '<p>Please confirm group creation.</p>';
	  $form['actions']['submit']['#submit'][] = 'atwork_group_group_create_submit';
	}
	if ($form_id == 'group_atwork_groups_edit_form') {
    $form['#attached']['library'][] = 'atwork_group/atwork-groups-form';
  }
}

/**
 * Implements custom submit handler for group create form
 */
function atwork_group_group_create_submit(array $form, FormStateInterface $form_state) {
	// Get gid from route parameters and redirect to group page.
	$route_params = $form_state->getRedirect()->getRouteParameters();
	$form_state->setRedirect('entity.group.canonical', ['group' => $route_params['group']]);
}

/**
 * Implements custom submit handler for group content add form
 */
function atwork_group_group_content_submit(array $form, FormStateInterface $form_state){
	// Set redirect back to the oiginal content node page.
	$nid = $form_state->getRedirect()->getOptions("entity_id")['entity']->get('entity_id')->getValue()[0]['target_id'];
	$form_state->setRedirect('entity.node.canonical', ['node' => $nid]);
}

/**
 * Implements custom submit handler for group join form
 */
function atwork_group_join_group_submit(array $form, FormStateInterface $form_state){
	// Set redirect back to the oiginal group page.
	$route_params = $form_state->getRedirect()->getRouteParameters();
	$form_state->setRedirect('entity.group.canonical', ['group' => $route_params['group']]);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 */
function atworknext_theme_suggestions_breadcrumb_alter(array &$suggestions, array $variables) {
	if ($node = \Drupal::routeMatch()->getParameter('node')) {
		$content_type = $node->bundle();
		$suggestions[] = 'breadcrumb__'.$content_type;
	}
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function atworknext_theme_suggestions_container_alter(array &$suggestions, array $variables) {
	$suggestions[] = 'container__' . 'atwork';
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function atworknext_theme_suggestions_input__radio_alter(array &$suggestions, array $variables, $hook){
  ///ksm($variables);
  //ksm($hook);
  //ksm($suggestions);
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function atworknext_theme_suggestions_input_alter(array &$suggestions, array $variables, $hook){
  //ksm($variables);
  //ksm($hook);
  //ksm($suggestions);
}

/**
 * Implements hook_field_widget_multivalue_WIDGET_TYPE_form_alter().
 */
function atwork_group_field_widget_multivalue_options_buttons_form_alter(array &$elements, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {

}

function atwork_group_element_info_alter(array &$types) {
  if (isset($types['radios'])) {
    $types['radios']['#attached']['library'][] = 'atwork_group/atwork_group.js';
    //ksm($types);
  }
}



